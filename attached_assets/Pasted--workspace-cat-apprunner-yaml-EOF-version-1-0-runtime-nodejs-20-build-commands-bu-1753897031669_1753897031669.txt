~/workspace$ cat > apprunner.yaml << 'EOF'
version: 1.0
runtime: nodejs-20
build:
  commands:
    build:
      - npm install
      - npm run build
run:
  runtime-version: latest
  command: npm start
  network:
    port: 8080
    env: PORT
  env:
    - name: NODE_ENV
      value: production
    - name: PORT
      value: "8080"
EOF
~/workspace$ npm run build
ls -la dist/
ls -la public/

> rest-express@1.0.0 build
> vite build && esbuild server/index.ts --platform=node --packages=external --bundle --format=esm --outdir=dist

vite v5.4.19 building for production...
✓ 3483 modules transformed.
[plugin:vite:reporter] [plugin vite:reporter] 
(!) /home/runner/workspace/client/src/lib/analytics.ts is dynamically imported by /home/runner/workspace/client/src/pages/landing-page.tsx but also statically imported by /home/runner/workspace/client/src/App.tsx, /home/runner/workspace/client/src/components/PatientParser.tsx, /home/runner/workspace/client/src/components/RealtimeSOAPIntegration.tsx, /home/runner/workspace/client/src/components/patient/draft-orders.tsx, /home/runner/workspace/client/src/components/patient/enhanced-medical-problems-dialog.tsx, /home/runner/workspace/client/src/components/patient/enhanced-medical-problems-list.tsx, /home/runner/workspace/client/src/components/patient/patient-attachments.tsx, /home/runner/workspace/client/src/components/patient/patient-chart-view.tsx, /home/runner/workspace/client/src/components/templates/TemplateManager.tsx, /home/runner/workspace/client/src/hooks/use-analytics.tsx, /home/runner/workspace/client/src/hooks/use-auth.tsx, /home/runner/workspace/client/src/pages/dashboard.tsx, /home/runner/workspace/client/src/pages/patient-lab-results.tsx, dynamic import will not move module into another chunk.

../dist/public/index.html                                                      4.19 kB │ gzip:   1.41 kB
../dist/public/assets/1950s Nurse copy Large_1753477880884-CxHdt3VA.png      454.50 kB
../dist/public/assets/Favorite-Aragon-Photo-1_1753409906439-Z7-H5OF6.jpeg    521.33 kB
../dist/public/assets/index-D4j_XrwR.css                                     176.82 kB │ gzip:  26.67 kB
../dist/public/assets/prescription-history-section-DwgWyHf-.js                 4.15 kB │ gzip:   1.52 kB
../dist/public/assets/accordion-DvxPPDCj.js                                    4.54 kB │ gzip:   1.82 kB
../dist/public/assets/imaging-section-bK8P_co0.js                             13.95 kB │ gzip:   3.82 kB
../dist/public/assets/family-history-section-zmNK4R4V.js                      15.07 kB │ gzip:   3.95 kB
../dist/public/assets/social-history-section-Dnb4zuwf.js                      19.77 kB │ gzip:   5.57 kB
../dist/public/assets/index-Dce66MDv.js                                    3,013.94 kB │ gzip: 777.47 kB

(!) Some chunks are larger than 500 kB after minification. Consider:
- Using dynamic import() to code-split the application
- Use build.rollupOptions.output.manualChunks to improve chunking: https://rollupjs.org/configuration-options/#output-manualchunks
- Adjust chunk size limit for this warning via build.chunkSizeWarningLimit.
✓ built in 19.06s
▲ [WARNING] Using direct eval with a bundler is not recommended and may cause problems [direct-eval]

    server/vite-wrapper.ts:15:27:
      15 │   const viteModule = await eval('import("./vite.js")');
         ╵                            ~~~~

  You can read more about direct eval and bundling here:
  https://esbuild.github.io/link/direct-eval

1 warning

  dist/index.js  2.5mb ⚠️

⚡ Done in 82ms
total 2576
drwxr-xr-x 1 runner runner      28 Jul 28 11:52 .
drwxr-xr-x 1 runner runner    3558 Jul 30 17:36 ..
-rw-r--r-- 1 runner runner 2635484 Jul 30 17:36 index.js
drwxr-xr-x 1 runner runner      32 Jul 30 17:36 public
ls: cannot access 'public/': No such file or directory
~/workspace$ 